(let* ((id (lambda (same) same))
       (const (lambda (always _any) always))
       (const-second (lambda (_any always) always))
       (pair (lambda (first second pair) (pair first second)))
       (first (lambda (pair) (pair const)))
       (second (lambda (pair) (pair const-second)))
       (true (lambda (true false) true))
       (false (lambda (true false) false))
       (fac (lambda (num)
              (if (eq? num 1)
                  1
                  (* num (fac (-1 num))))))))
  (second some))
